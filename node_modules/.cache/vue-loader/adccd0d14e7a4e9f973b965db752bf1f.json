{"remainingRequest":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zatilimaniahwan/kana-new/src/components/FeatureSection/featureThree.vue?vue&type=template&id=50629548&","dependencies":[{"path":"/Users/zatilimaniahwan/kana-new/src/components/FeatureSection/featureThree.vue","mtime":1615909333146},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxzZWN0aW9uCiAgaWQ9ImZlYXR1cmVzIgogIGNsYXNzPSJzZWN0aW9uIGZlYXR1cmVzLWFyZWEgb3ZlcmZsb3ctaGlkZGVuIHB0Yl8xMDAiCj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0icm93IGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLW1kLTEwIGNvbC1sZy02Ij4KICAgICAgICA8IS0tIFNlY3Rpb24gSGVhZGluZyAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLWhlYWRpbmcgdGV4dC1jZW50ZXIiPgogICAgICAgICAgPGgyPldoeSBTbWFsbCBCdXNpbmVzcyBPd25lcidzIExvdmVzIHNBcHA8L2gyPgogICAgICAgICAgPHAgY2xhc3M9ImQtbm9uZSBkLXNtLWJsb2NrIG10LTQiPgogICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gTGFib3J1bSBvYmNhZWNhdGkgZGlnbmlzc2ltb3MgcXVhZSBxdW8gYWQgaXN0ZSBpcHN1bSBvZmZpY2lpcyBkZWxlbml0aSBhc3BlcmlvcmVzIHNpdC4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwIGNsYXNzPSJkLWJsb2NrIGQtc20tbm9uZSBtdC00Ij4KICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIExhYm9ydW0gb2JjYWVjYXRpLgogICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtNiBjb2wtbGctNCI+CiAgICAgICAgPCEtLSBGZWF0dXJlcyBJdGVtIC0tPgogICAgICAgIDx1bCBjbGFzcz0iZmVhdHVyZXMtaXRlbSI+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDwhLS0gSW1hZ2UgQm94IC0tPgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgY2xhc3M9ImltYWdlLWJveCBtZWRpYSBweC0xIHB5LTMgcHktbWQtNCB3b3cgZmFkZUluTGVmdCIKICAgICAgICAgICAgICBkYXRhLWFvcy1kdXJhdGlvbj0iMnMiCiAgICAgICAgICAgICAgZGF0YS13b3ctZGVsYXk9IjAuM3MiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8IS0tIEZlYXR1cmVkIEltYWdlIC0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVkLWltZyBtci0zIj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgY2xhc3M9ImF2YXRhci1zbSIKICAgICAgICAgICAgICAgICAgc3JjPSJhc3NldHMvaW1nL2ZlYXR1cmVkX2ltYWdlXzEucG5nIgogICAgICAgICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tIEljb24gVGV4dCAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXRleHQgbWVkaWEtYm9keSBhbGlnbi1zZWxmLWNlbnRlciBhbGlnbi1zZWxmLW1kLXN0YXJ0Ij4KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibWItMiI+CiAgICAgICAgICAgICAgICAgIEZ1bGx5IGZ1bmN0aW9uYWwKICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICA8cD5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gVmVyaXRhdGlzIGN1bHBhIGV4cGVkaXRhIGRpZ25pc3NpbW9zLjwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpPgogICAgICAgICAgICA8IS0tIEltYWdlIEJveCAtLT4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIGNsYXNzPSJpbWFnZS1ib3ggbWVkaWEgcHgtMSBweS0zIHB5LW1kLTQgd293IGZhZGVJbkxlZnQiCiAgICAgICAgICAgICAgZGF0YS1hb3MtZHVyYXRpb249IjJzIgogICAgICAgICAgICAgIGRhdGEtd293LWRlbGF5PSIwLjZzIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPCEtLSBGZWF0dXJlZCBJbWFnZSAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlZC1pbWcgbXItMyI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJhdmF0YXItc20iCiAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltZy9mZWF0dXJlZF9pbWFnZV8yLnBuZyIKICAgICAgICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPCEtLSBJY29uIFRleHQgLS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi10ZXh0IG1lZGlhLWJvZHkgYWxpZ24tc2VsZi1jZW50ZXIgYWxpZ24tc2VsZi1tZC1zdGFydCI+CiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Im1iLTIiPgogICAgICAgICAgICAgICAgICBMaXZlIENoYXQKICAgICAgICAgICAgICAgIDwvaDM+CiAgICAgICAgICAgICAgICA8cD5Mb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2VjdGV0dXIgYWRpcGlzaWNpbmcgZWxpdC4gVmVyaXRhdGlzIGN1bHBhIGV4cGVkaXRhIGRpZ25pc3NpbW9zLjwvcD4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgPGxpPgogICAgICAgICAgICA8IS0tIEltYWdlIEJveCAtLT4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIGNsYXNzPSJpbWFnZS1ib3ggbWVkaWEgcHgtMSBweS0zIHB5LW1kLTQgd293IGZhZGVJbkxlZnQiCiAgICAgICAgICAgICAgZGF0YS1hb3MtZHVyYXRpb249IjJzIgogICAgICAgICAgICAgIGRhdGEtd293LWRlbGF5PSIwLjlzIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPCEtLSBGZWF0dXJlZCBJbWFnZSAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlZC1pbWcgbXItMyI+CiAgICAgICAgICAgICAgICA8aW1nCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJhdmF0YXItc20iCiAgICAgICAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltZy9mZWF0dXJlZF9pbWFnZV8zLnBuZyIKICAgICAgICAgICAgICAgICAgYWx0PSIiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPCEtLSBJY29uIFRleHQgLS0+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi10ZXh0IG1lZGlhLWJvZHkgYWxpZ24tc2VsZi1jZW50ZXIgYWxpZ24tc2VsZi1tZC1zdGFydCI+CiAgICAgICAgICAgICAgICA8aDMgY2xhc3M9Im1iLTIiPgogICAgICAgICAgICAgICAgICBTZWN1cmUgRGF0YQogICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgIDxwPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBWZXJpdGF0aXMgY3VscGEgZXhwZWRpdGEgZGlnbmlzc2ltb3MuPC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbGctNCBkLW5vbmUgZC1sZy1ibG9jayI+CiAgICAgICAgPCEtLSBGZWF0dXRlcyBUaHVtYiAtLT4KICAgICAgICA8ZGl2IGNsYXNzPSJmZWF0dXJlcy10aHVtYiB0ZXh0LWNlbnRlciI+CiAgICAgICAgICA8aW1nCiAgICAgICAgICAgIHNyYz0iYXNzZXRzL2ltZy9mZWF0dXJlc190aHVtYi5wbmciCiAgICAgICAgICAgIGFsdD0iIgogICAgICAgICAgPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC02IGNvbC1sZy00Ij4KICAgICAgICA8IS0tIEZlYXR1cmVzIEl0ZW0gLS0+CiAgICAgICAgPHVsIGNsYXNzPSJmZWF0dXJlcy1pdGVtIj4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPCEtLSBJbWFnZSBCb3ggLS0+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBjbGFzcz0iaW1hZ2UtYm94IG1lZGlhIHB4LTEgcHktMyBweS1tZC00IHdvdyBmYWRlSW5SaWdodCIKICAgICAgICAgICAgICBkYXRhLWFvcy1kdXJhdGlvbj0iMnMiCiAgICAgICAgICAgICAgZGF0YS13b3ctZGVsYXk9IjAuM3MiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8IS0tIEZlYXR1cmVkIEltYWdlIC0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVkLWltZyBtci0zIj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgY2xhc3M9ImF2YXRhci1zbSIKICAgICAgICAgICAgICAgICAgc3JjPSJhc3NldHMvaW1nL2ZlYXR1cmVkX2ltYWdlXzQucG5nIgogICAgICAgICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tIEljb24gVGV4dCAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXRleHQgbWVkaWEtYm9keSBhbGlnbi1zZWxmLWNlbnRlciBhbGlnbi1zZWxmLW1kLXN0YXJ0Ij4KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibWItMiI+CiAgICAgICAgICAgICAgICAgIEVhc3kgdG8gQ3VzdG9taXplCiAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgPHA+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIFZlcml0YXRpcyBjdWxwYSBleHBlZGl0YSBkaWduaXNzaW1vcy48L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPCEtLSBJbWFnZSBCb3ggLS0+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBjbGFzcz0iaW1hZ2UtYm94IG1lZGlhIHB4LTEgcHktMyBweS1tZC00IHdvdyBmYWRlSW5SaWdodCIKICAgICAgICAgICAgICBkYXRhLWFvcy1kdXJhdGlvbj0iMnMiCiAgICAgICAgICAgICAgZGF0YS13b3ctZGVsYXk9IjAuNnMiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8IS0tIEZlYXR1cmVkIEltYWdlIC0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVkLWltZyBtci0zIj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgY2xhc3M9ImF2YXRhci1zbSIKICAgICAgICAgICAgICAgICAgc3JjPSJhc3NldHMvaW1nL2ZlYXR1cmVkX2ltYWdlXzUucG5nIgogICAgICAgICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tIEljb24gVGV4dCAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXRleHQgbWVkaWEtYm9keSBhbGlnbi1zZWxmLWNlbnRlciBhbGlnbi1zZWxmLW1kLXN0YXJ0Ij4KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibWItMiI+CiAgICAgICAgICAgICAgICAgIFJlc3BvbnNpdmUgRGVzaWduCiAgICAgICAgICAgICAgICA8L2gzPgogICAgICAgICAgICAgICAgPHA+TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIFZlcml0YXRpcyBjdWxwYSBleHBlZGl0YSBkaWduaXNzaW1vcy48L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPCEtLSBJbWFnZSBCb3ggLS0+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICBjbGFzcz0iaW1hZ2UtYm94IG1lZGlhIHB4LTEgcHktMyBweS1tZC00IHdvdyBmYWRlSW5SaWdodCIKICAgICAgICAgICAgICBkYXRhLWFvcy1kdXJhdGlvbj0iMnMiCiAgICAgICAgICAgICAgZGF0YS13b3ctZGVsYXk9IjAuOXMiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8IS0tIEZlYXR1cmVkIEltYWdlIC0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZlYXR1cmVkLWltZyBtci0zIj4KICAgICAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICAgICAgY2xhc3M9ImF2YXRhci1zbSIKICAgICAgICAgICAgICAgICAgc3JjPSJhc3NldHMvaW1nL2ZlYXR1cmVkX2ltYWdlXzYucG5nIgogICAgICAgICAgICAgICAgICBhbHQ9IiIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tIEljb24gVGV4dCAtLT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXRleHQgbWVkaWEtYm9keSBhbGlnbi1zZWxmLWNlbnRlciBhbGlnbi1zZWxmLW1kLXN0YXJ0Ij4KICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibWItMiI+CiAgICAgICAgICAgICAgICAgIEhlbHAgRG9jdW1lbnRhdGlvbgogICAgICAgICAgICAgICAgPC9oMz4KICAgICAgICAgICAgICAgIDxwPkxvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBWZXJpdGF0aXMgY3VscGEgZXhwZWRpdGEgZGlnbmlzc2ltb3MuPC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9zZWN0aW9uPgo="},null]}