{"remainingRequest":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zatilimaniahwan/kana-new/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zatilimaniahwan/kana-new/src/components/FooterSection/footerOne.vue?vue&type=template&id=53daba74&","dependencies":[{"path":"/Users/zatilimaniahwan/kana-new/src/components/FooterSection/footerOne.vue","mtime":1615834560150},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zatilimaniahwan/kana-new/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}